// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TO_DO_LIST_WepAPI.Data;

#nullable disable

namespace TO_DO_LIST_WepAPI.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20250926165232_V2_SeedInicialTodos")]
    partial class V2_SeedInicialTodos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TO_DO_LIST_WepAPI.Models.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Todo_Items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7048),
                            Description = "Instalar SDK, Visual Studio e configurar projeto",
                            IsCompleted = true,
                            Title = "Configurar ambiente de desenvolvimento .NET"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7589),
                            Description = "Criar classe model e configurações do DbContext",
                            IsCompleted = true,
                            Title = "Implementar modelo TodoItem com Entity Framework"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7590),
                            Description = "Implementar GET, POST, PUT, DELETE para TodoItems",
                            IsCompleted = false,
                            Title = "Criar API Controller com endpoints CRUD"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7641),
                            Description = "Validar funcionamento de todas as operações CRUD",
                            IsCompleted = false,
                            Title = "Testar endpoints com Swagger/Postman"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7642),
                            Description = "Adicionar Data Annotations para validação de entrada",
                            IsCompleted = false,
                            Title = "Implementar validações nos DTOs"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7643),
                            Description = "Implementar serilog ou ILogger para monitoramento",
                            IsCompleted = false,
                            Title = "Configurar sistema de logging"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7644),
                            Description = "Criar README com exemplos de uso e endpoints",
                            IsCompleted = false,
                            Title = "Escrever documentação da API"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7644),
                            Description = "Criar middleware para Exception Handling",
                            IsCompleted = false,
                            Title = "Implementar tratamento de erros global"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7645),
                            Description = "Implementar xUnit ou MSTest para TodoService",
                            IsCompleted = false,
                            Title = "Criar testes unitários para o Service"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 9, 26, 16, 52, 31, 848, DateTimeKind.Utc).AddTicks(7646),
                            Description = "Organizar demonstração para avaliação técnica",
                            IsCompleted = false,
                            Title = "Preparar apresentação do projeto"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
